name: Build
on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [test/crlf_wrong_render]
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  gradleValidation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.6

  codeInspection:
    name: Code Inspection
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v3

#      - name: Qodana - Code Inspection
#        uses: JetBrains/qodana-action@v2022.3.4

  test:
    name: Gradle ${{ matrix.gradleVersion }} @ ${{ matrix.os }}
    needs: gradleValidation
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        gradleVersion:
          - 6.8
          - 6.9.2
          - 7.6.1
          - 8.1.1
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            script: |
              sudo rm -rf /usr/share/dotnet
              sudo rm -rf /usr/local/lib/android
              sudo rm -rf /opt/ghc

    steps:

      - name: Run OS-dedicated script
        if: ${{ matrix.script }}
        run: ${{ matrix.script }}

      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Linters and Test
        run: ./gradlew check -PtestGradleVersion="${{ matrix.gradleVersion }}"

      - name: Collect Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.gradleVersion }}-${{ runner.os }}
          path: |
            ${{ github.workspace }}/build/reports/tests
            ${{ github.workspace }}/build/reports/configuration-cache
            ${{ github.workspace }}/build/test-results

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          NAME="$(echo "$PROPERTIES" | grep "^name:" | cut -f2- -d ' ')"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          ARTIFACT="$NAME-$VERSION.jar"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"

          echo "::set-output name=version::$VERSION"
          echo "::set-output name=artifact::$ARTIFACT"
          echo "::set-output name=changelog::$CHANGELOG"

      - name: Build Plugin
        run: ./gradlew build -x test
